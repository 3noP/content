id: QRadar Indicator Hunting
version: -1
fromversion: 4.5.0
name: QRadar Indicator Hunting
description: 'The Playbook queries QRadar SIEM for indicators such as file hashes,
  IP addresses, domains, or urls. '
starttaskid: '0'
tasks:
  '0':
    id: '0'
    taskid: 1e5e03be-198e-4770-8916-4ffd95d48c98
    type: start
    task:
      id: 1e5e03be-198e-4770-8916-4ffd95d48c98
      version: -1
      name: ''
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '55'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 760,
          "y": -240
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '2':
    id: '2'
    taskid: bea2047c-5391-4dc3-82f5-c96f766492e2
    type: title
    task:
      id: bea2047c-5391-4dc3-82f5-c96f766492e2
      version: -1
      name: Hash Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '8'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -670,
          "y": 210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '5':
    id: '5'
    taskid: e4218549-fb05-494c-885e-e4fa5835ddb6
    type: title
    task:
      id: e4218549-fb05-494c-885e-e4fa5835ddb6
      version: -1
      name: IP Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '7'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1380,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '6':
    id: '6'
    taskid: e29b63fc-bf8d-42d5-8b0d-c5ce615dace5
    type: title
    task:
      id: e29b63fc-bf8d-42d5-8b0d-c5ce615dace5
      version: -1
      name: Domain/Url Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '9'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '7':
    id: '7'
    taskid: 1a18ea0d-2566-47eb-8a8d-e4f5d939891b
    type: condition
    task:
      id: 1a18ea0d-2566-47eb-8a8d-e4f5d939891b
      version: -1
      name: Is there an IP to search?
      description: Is there an IP on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '50'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.IPAddress
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1380,
          "y": 320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '8':
    id: '8'
    taskid: 1bbded0d-8f2e-4a71-85d6-17ab7efeae16
    type: condition
    task:
      id: 1bbded0d-8f2e-4a71-85d6-17ab7efeae16
      version: -1
      name: Is there a hash to search?
      description: Is there a hash on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '26'
      - '27'
      - '38'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -670,
          "y": 340
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '9':
    id: '9'
    taskid: 63a54990-a021-4b30-8357-3f4dc5e7c57e
    type: condition
    task:
      id: 63a54990-a021-4b30-8357-3f4dc5e7c57e
      version: -1
      name: Is there a domain or url to search?
      description: Is there a domain or URL on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '10'
      'yes':
      - '11'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomain
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '10':
    id: '10'
    taskid: 6f6689d7-3842-47d7-8b9c-bb95ed164305
    type: title
    task:
      id: 6f6689d7-3842-47d7-8b9c-bb95ed164305
      version: -1
      name: Domain/Url hunting done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2100,
          "y": 2645
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '11':
    id: '11'
    taskid: 518a8b2f-ef9f-4c67-8af5-8a3ce325aa34
    type: condition
    task:
      id: 518a8b2f-ef9f-4c67-8af5-8a3ce325aa34
      version: -1
      name: Is there a custom domain or url field?
      description: Is there a custom domain or url field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '56'
      'yes':
      - '57'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.URLDomainField
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '17':
    id: '17'
    taskid: 101e1496-1b11-4b1d-8f14-393fcb2ca712
    type: playbook
    task:
      id: 101e1496-1b11-4b1d-8f14-393fcb2ca712
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '89'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: DomainURL
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) ILIKE  '%$1%'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 3110,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '21':
    id: '21'
    taskid: 45eab1bc-ad42-42cc-85db-d16642b0eb5c
    type: condition
    task:
      id: 45eab1bc-ad42-42cc-85db-d16642b0eb5c
      version: -1
      name: Is there a custom MD5 field?
      description: Is there a custom MD5 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '64'
      'yes':
      - '65'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.QradarMD5Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -2660,
          "y": 1160
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '22':
    id: '22'
    taskid: 1c5c9a65-b8fb-410a-8538-8d3598597f51
    type: condition
    task:
      id: 1c5c9a65-b8fb-410a-8538-8d3598597f51
      version: -1
      name: Is there an MD5 to search?
      description: Is there an MD5 on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '21'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.MD5
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1930,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '23':
    id: '23'
    taskid: 936b47d8-c766-40d7-8d62-48bee6c581f3
    type: playbook
    task:
      id: 936b47d8-c766-40d7-8d62-48bee6c581f3
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '93'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: MD5
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) LIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -2950,
          "y": 1640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '25':
    id: '25'
    taskid: 1e2c6a3b-eede-4ff6-8611-04b8540c1485
    type: title
    task:
      id: 1e2c6a3b-eede-4ff6-8611-04b8540c1485
      version: -1
      name: Hash hunting done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -670,
          "y": 2790
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '26':
    id: '26'
    taskid: d4dd1ef1-2acc-4232-8b95-c4dc67f159fd
    type: title
    task:
      id: d4dd1ef1-2acc-4232-8b95-c4dc67f159fd
      version: -1
      name: MD5 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '22'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1930,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '27':
    id: '27'
    taskid: d19803f2-69a0-44a7-872d-f17248a78c9e
    type: title
    task:
      id: d19803f2-69a0-44a7-872d-f17248a78c9e
      version: -1
      name: SHA1 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '29'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1520,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '29':
    id: '29'
    taskid: d3d7c62a-842c-4393-8716-c2a832fac69c
    type: condition
    task:
      id: d3d7c62a-842c-4393-8716-c2a832fac69c
      version: -1
      name: Is there a SHA1 to search?
      description: Is there a SHA1 hash on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '31'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA1
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1520,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '31':
    id: '31'
    taskid: 3d3b678e-4311-4cc5-8311-a9c72c337320
    type: condition
    task:
      id: 3d3b678e-4311-4cc5-8311-a9c72c337320
      version: -1
      name: Was there a custom SHA1 field?
      description: Was there a custom SHA1 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '62'
      'yes':
      - '63'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarSHA1Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1170,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '35':
    id: '35'
    taskid: 571a58e3-85e7-451b-8611-ec00dabd7968
    type: playbook
    task:
      id: 571a58e3-85e7-451b-8611-ec00dabd7968
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '91'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA1
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) LIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -1290,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '37':
    id: '37'
    taskid: 45b95677-8cf6-4e11-85fa-82710e87168f
    type: playbook
    task:
      id: 45b95677-8cf6-4e11-85fa-82710e87168f
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '93'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: inputs.QradarMD5Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.MD5
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ''' OR "'
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: '='
              replaceWith:
                value:
                  simple: '" = '''
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where "'
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ''' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -2400,
          "y": 1640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '38':
    id: '38'
    taskid: 18fd0abf-37a0-40e4-89b0-c4e986b6289f
    type: title
    task:
      id: 18fd0abf-37a0-40e4-89b0-c4e986b6289f
      version: -1
      name: SHA256 Search
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '39'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -250,
          "y": 640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '39':
    id: '39'
    taskid: 00831ce4-cf7d-4d0c-89b5-e1659108d08a
    type: condition
    task:
      id: 00831ce4-cf7d-4d0c-89b5-e1659108d08a
      version: -1
      name: Is there a SHA256 to search?
      description: Is there a SHA256 hash on which to search?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '41'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: inputs.SHA256
            iscontext: true
    view: |-
      {
        "position": {
          "x": -250,
          "y": 775
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '41':
    id: '41'
    taskid: c880afa7-6b2d-4d23-8636-d4e670b56121
    type: condition
    task:
      id: c880afa7-6b2d-4d23-8636-d4e670b56121
      version: -1
      name: Is there a custom SHA256 field?
      description: Is there a custom SHA256 field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '60'
      'yes':
      - '61'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarSHA256Field
            iscontext: true
    view: |-
      {
        "position": {
          "x": -250,
          "y": 1120
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '47':
    id: '47'
    taskid: 0dce9208-4682-42e3-8ad8-eea7fbf6e2ed
    type: playbook
    task:
      id: 0dce9208-4682-42e3-8ad8-eea7fbf6e2ed
      version: -1
      name: QRadarFullSearch
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '90'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: File
          accessor: SHA256
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) ILIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -440,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '48':
    id: '48'
    taskid: 50ddc182-a26f-4f2f-8344-d86868e0670f
    type: title
    task:
      id: 50ddc182-a26f-4f2f-8344-d86868e0670f
      version: -1
      name: IP hunting done
      type: title
      iscommand: false
      brand: ''
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 760,
          "y": 2665
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '50':
    id: '50'
    taskid: 754f9d36-709c-48c2-881f-3e048c9a3428
    type: condition
    task:
      id: 754f9d36-709c-48c2-881f-3e048c9a3428
      version: -1
      name: Is there a custom IP field?
      description: Is there a custom IP field?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '59'
      'yes':
      - '58'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.QradarIPfield
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1380,
          "y": 910
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '53':
    id: '53'
    taskid: b5ec5d8f-c252-4830-8382-ffba0ca7f050
    type: playbook
    task:
      id: b5ec5d8f-c252-4830-8382-ffba0ca7f050
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '88'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: IP
          transformers:
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: (.*)
              replaceWith:
                value:
                  simple: UTF8(payload) LIKE  '$1'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where '
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix:
                value:
                  simple: ' '
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '55':
    id: '55'
    taskid: 108a0511-052f-44a2-8eee-15db47fb94c4
    type: condition
    task:
      id: 108a0511-052f-44a2-8eee-15db47fb94c4
      version: -1
      name: Is Qradar enabled?
      description: Is Qradar enabled?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '2'
      - '5'
      - '6'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isExists
          left:
            value:
              simple: modules.brand
            iscontext: true
      - - operator: isEqualString
          left:
            value:
              simple: modules.brand
            iscontext: true
          right:
            value:
              simple: QRadar
      - - operator: isEqualString
          left:
            value:
              simple: modules.state
            iscontext: true
          right:
            value:
              simple: active
    view: |-
      {
        "position": {
          "x": 760,
          "y": -90
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '56':
    id: '56'
    taskid: 99f1dc9b-9e82-4de6-8c76-cfb278dc3f47
    type: title
    task:
      id: 99f1dc9b-9e82-4de6-8c76-cfb278dc3f47
      version: -1
      name: QRadar query without custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '102'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3110,
          "y": 1200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '57':
    id: '57'
    taskid: 6ddf4d44-82fa-4c19-8c94-0ebf66def8ce
    type: title
    task:
      id: 6ddf4d44-82fa-4c19-8c94-0ebf66def8ce
      version: -1
      name: QRadar query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '97'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2540,
          "y": 1200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '58':
    id: '58'
    taskid: b809f64f-9089-4002-89cf-232ae4a7a3d2
    type: title
    task:
      id: b809f64f-9089-4002-89cf-232ae4a7a3d2
      version: -1
      name: QRadar query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '96'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1590,
          "y": 1200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '59':
    id: '59'
    taskid: 92106ff5-01cc-4309-8448-2d819ee7ec11
    type: title
    task:
      id: 92106ff5-01cc-4309-8448-2d819ee7ec11
      version: -1
      name: QRadar query without custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '101'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 1200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '60':
    id: '60'
    taskid: 048e7dcc-fdac-4abb-8417-8d5a61c373c7
    type: title
    task:
      id: 048e7dcc-fdac-4abb-8417-8d5a61c373c7
      version: -1
      name: QRadar query without custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '100'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -440,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '61':
    id: '61'
    taskid: 22af88bf-5f8c-43cd-85d7-ebf3625f478c
    type: title
    task:
      id: 22af88bf-5f8c-43cd-85d7-ebf3625f478c
      version: -1
      name: QRadar query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '95'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -30,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '62':
    id: '62'
    taskid: 89f75ae1-32c3-4803-8ca0-f4417919905f
    type: title
    task:
      id: 89f75ae1-32c3-4803-8ca0-f4417919905f
      version: -1
      name: QRadar query without custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '99'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1290,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '63':
    id: '63'
    taskid: b72bb120-83f8-4709-8744-f787368850f9
    type: title
    task:
      id: b72bb120-83f8-4709-8744-f787368850f9
      version: -1
      name: QRadar query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '94'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -890,
          "y": 1320
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '64':
    id: '64'
    taskid: 6839984f-3bd3-4555-85df-2939bfe6a52f
    type: title
    task:
      id: 6839984f-3bd3-4555-85df-2939bfe6a52f
      version: -1
      name: QRadar query without custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '98'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2950,
          "y": 1360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '65':
    id: '65'
    taskid: 37165d4b-8f84-4192-8788-06f1f4144d00
    type: title
    task:
      id: 37165d4b-8f84-4192-8788-06f1f4144d00
      version: -1
      name: QRadar query with custom fields
      type: title
      iscommand: false
      brand: ''
      description: ''
    nexttasks:
      '#none#':
      - '37'
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2400,
          "y": 1350
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '67':
    id: '67'
    taskid: 051075c2-9d98-4bf3-8875-93e7bce02bde
    type: regular
    task:
      id: 051075c2-9d98-4bf3-8875-93e7bce02bde
      version: -1
      name: Set detected usernames
      description: Sets the usernames found in the DetectedUsers context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '68'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedUsers
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.username}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1320,
          "y": 2200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '68':
    id: '68'
    taskid: c86c0ac8-aa25-42eb-872e-2ccfef3f5670
    type: regular
    task:
      id: c86c0ac8-aa25-42eb-872e-2ccfef3f5670
      version: -1
      name: Get hostnames from assets
      description: List all assets found in the model
      script: '|||qradar-get-assets'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '70'
    scriptarguments:
      fields: {}
      filter:
        complex:
          root: ${QRadar
          accessor: DetectedIPs}
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: interfaces contains ip_addresses contains value= "
              suffix:
                value:
                  simple: '"'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
      headers: {}
      range: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1320,
          "y": 2345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '70':
    id: '70'
    taskid: da9287e8-cce3-436a-80b1-e5ffeb88e0dd
    type: regular
    task:
      id: da9287e8-cce3-436a-80b1-e5ffeb88e0dd
      version: -1
      name: Set detected hostnames from assets
      description: Sets the hostnames found in the DetectedHosts context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '48'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedHosts
      value:
        complex:
          root: ${QRadar
          accessor: Asset.Name.Value}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1320,
          "y": 2475
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '72':
    id: '72'
    taskid: d9cbfce6-7ef2-4479-8138-040bf6a8fdc4
    type: regular
    task:
      id: d9cbfce6-7ef2-4479-8138-040bf6a8fdc4
      version: -1
      name: Set detected usernames
      description: Sets the usernames found in the DetectedUsers context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '73'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedUsers
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.username}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2200
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '73':
    id: '73'
    taskid: 860cd5cc-03e7-47f8-876c-c0a7ae6f9ee2
    type: regular
    task:
      id: 860cd5cc-03e7-47f8-876c-c0a7ae6f9ee2
      version: -1
      name: Get hostnames from assets
      description: List all assets found in the model
      script: '|||qradar-get-assets'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '74'
    scriptarguments:
      fields: {}
      filter:
        complex:
          root: ${QRadar
          accessor: DetectedIPs}
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: interfaces contains ip_addresses contains value= "
              suffix:
                value:
                  simple: '"'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
      headers: {}
      range: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '74':
    id: '74'
    taskid: 33ccc60b-b967-494f-8cc6-35a50ec3bbdb
    type: regular
    task:
      id: 33ccc60b-b967-494f-8cc6-35a50ec3bbdb
      version: -1
      name: Set detected hostnames from assets
      description: Sets the hostnames found in the DetectedHosts context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '10'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedHosts
      value:
        complex:
          root: ${QRadar
          accessor: Asset.Name.Value}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2475
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '76':
    id: '76'
    taskid: c7a290f9-8824-40cf-8396-05c5e5cf282e
    type: regular
    task:
      id: c7a290f9-8824-40cf-8396-05c5e5cf282e
      version: -1
      name: Set detected usernames
      description: Sets the usernames found in the DetectedUsers context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '77'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedUsers
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.username}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -200,
          "y": 2355
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '77':
    id: '77'
    taskid: 68f08255-35ba-4753-8312-bf6e0d5f47d3
    type: regular
    task:
      id: 68f08255-35ba-4753-8312-bf6e0d5f47d3
      version: -1
      name: Get hostnames from assets
      description: List all assets found in the model
      script: '|||qradar-get-assets'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '78'
    scriptarguments:
      fields: {}
      filter:
        complex:
          root: ${QRadar
          accessor: DetectedIPs}
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: interfaces contains ip_addresses contains value= "
              suffix:
                value:
                  simple: '"'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
      headers: {}
      range: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -200,
          "y": 2490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '78':
    id: '78'
    taskid: bed65866-2d10-4ae6-8002-953bd37c9e64
    type: regular
    task:
      id: bed65866-2d10-4ae6-8002-953bd37c9e64
      version: -1
      name: Set detected hostnames from assets
      description: Sets the hostnames found in the DetectedHosts context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedHosts
      value:
        complex:
          root: ${QRadar
          accessor: Asset.Name.Value}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -200,
          "y": 2615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '80':
    id: '80'
    taskid: a9ad7d34-1000-43a9-8420-8cdab06c339d
    type: regular
    task:
      id: a9ad7d34-1000-43a9-8420-8cdab06c339d
      version: -1
      name: Set detected usernames
      description: Sets the usernames found in the DetectedUsers context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '81'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedUsers
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.username}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1090,
          "y": 2355
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '81':
    id: '81'
    taskid: 5f358135-faaa-42f4-8494-18f385dd93df
    type: regular
    task:
      id: 5f358135-faaa-42f4-8494-18f385dd93df
      version: -1
      name: Get hostnames from assets
      description: List all assets found in the model
      script: '|||qradar-get-assets'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '82'
    scriptarguments:
      fields: {}
      filter:
        complex:
          root: ${QRadar
          accessor: DetectedIPs}
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: interfaces contains ip_addresses contains value= "
              suffix:
                value:
                  simple: '"'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
      headers: {}
      range: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1090,
          "y": 2490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '82':
    id: '82'
    taskid: a94d12b3-ea67-418e-84e8-58355bf88287
    type: regular
    task:
      id: a94d12b3-ea67-418e-84e8-58355bf88287
      version: -1
      name: Set detected hostnames from assets
      description: Sets the hostnames found in the DetectedHosts context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedHosts
      value:
        complex:
          root: ${QRadar
          accessor: Asset.Name.Value}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1090,
          "y": 2615
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '83':
    id: '83'
    taskid: eb011cdd-8c0a-414b-8b8c-77f6fce6720a
    type: regular
    task:
      id: eb011cdd-8c0a-414b-8b8c-77f6fce6720a
      version: -1
      name: Set detected source IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '103'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedSourceIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.sourceip}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2210,
          "y": 2055
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '84':
    id: '84'
    taskid: 5adbe1df-1b40-4b36-8a4f-0e9c647b753c
    type: regular
    task:
      id: 5adbe1df-1b40-4b36-8a4f-0e9c647b753c
      version: -1
      name: Set detected usernames
      description: Sets the usernames found in the DetectedUsers context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '85'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedUsers
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.username}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2210,
          "y": 2345
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '85':
    id: '85'
    taskid: 0fb24dbb-ee32-4bb5-848e-79fc9f8b3435
    type: regular
    task:
      id: 0fb24dbb-ee32-4bb5-848e-79fc9f8b3435
      version: -1
      name: Get hostnames from assets
      description: List all assets found in the model
      script: '|||qradar-get-assets'
      type: regular
      iscommand: true
      brand: ''
    nexttasks:
      '#none#':
      - '86'
    scriptarguments:
      fields: {}
      filter:
        complex:
          root: ${QRadar
          accessor: DetectedIPs}
          transformers:
          - operator: concat
            args:
              prefix:
                value:
                  simple: interfaces contains ip_addresses contains value= "
              suffix:
                value:
                  simple: '"'
          - operator: join
            args:
              separator:
                value:
                  simple: ' OR '
      headers: {}
      range: {}
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2210,
          "y": 2475
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '86':
    id: '86'
    taskid: 78b64c88-eabd-4d1e-845d-d4820952aa59
    type: regular
    task:
      id: 78b64c88-eabd-4d1e-845d-d4820952aa59
      version: -1
      name: Set detected hostnames from assets
      description: Sets the hostnames found in the DetectedHosts context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '25'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedHosts
      value:
        complex:
          root: ${QRadar
          accessor: Asset.Name.Value}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2210,
          "y": 2605
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '88':
    id: '88'
    taskid: c7322fac-04f1-4fc9-8ffc-f921999c6055
    type: condition
    task:
      id: c7322fac-04f1-4fc9-8ffc-f921999c6055
      version: -1
      description: Is ip detected by QRadar?
      name: Is ip detected by QRadar?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '48'
      'yes':
      - '108'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": 1310,
          "y": 1640
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '89':
    id: '89'
    taskid: d5936c9a-3729-492d-8078-25447f3cb947
    type: condition
    task:
      id: d5936c9a-3729-492d-8078-25447f3cb947
      version: -1
      description: Is domain or url detected by QRadar?
      name: Is domain or url detected by QRadar?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '10'
      'yes':
      - '110'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '90':
    id: '90'
    taskid: 8b6062b1-a634-41df-81bf-ef45308835f4
    type: condition
    task:
      id: 8b6062b1-a634-41df-81bf-ef45308835f4
      version: -1
      description: Is SHA256 file hash detected by QRadar?
      name: Is SHA256 file hash detected by QRadar?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '107'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": -200,
          "y": 1870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '91':
    id: '91'
    taskid: 92788afe-0612-42f7-883f-bf15289262a9
    type: condition
    task:
      id: 92788afe-0612-42f7-883f-bf15289262a9
      version: -1
      description: Is SHA1 file hash detected by QRadar?
      name: Is SHA1 file hash detected by QRadar?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '104'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": -1090,
          "y": 1870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '93':
    id: '93'
    taskid: 8e7e7606-a281-48fb-8199-8bffc46c8c9d
    type: condition
    task:
      id: 8e7e7606-a281-48fb-8199-8bffc46c8c9d
      version: -1
      description: Is MD5 file hash detected by QRadar?
      name: Is MD5 file hash detected by QRadar?
      type: condition
      iscommand: false
      brand: ''
    nexttasks:
      '#default#':
      - '25'
      'yes':
      - '83'
    separatecontext: false
    conditions:
    - label: 'yes'
      condition:
      - - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
        - operator: isNotEmpty
          left:
            value:
              simple: QRadar.Search.Result
            iscontext: true
    view: |-
      {
        "position": {
          "x": -3220,
          "y": 1880
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '94':
    id: '94'
    taskid: a464ed17-e568-46da-835d-f2b20546e580
    type: playbook
    task:
      id: a464ed17-e568-46da-835d-f2b20546e580
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '91'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: inputs.QradarSHA1Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.SHA1
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ''' OR "'
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: '='
              replaceWith:
                value:
                  simple: '" = '''
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where "'
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ''' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -890,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '95':
    id: '95'
    taskid: e91cfc92-d4a6-4820-83e2-710c08a07661
    type: playbook
    task:
      id: e91cfc92-d4a6-4820-83e2-710c08a07661
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '90'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: inputs.QradarSHA256Field
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.SHA256
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ''' OR "'
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: '='
              replaceWith:
                value:
                  simple: '" = '''
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where "'
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ''' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": -30,
          "y": 1650
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '96':
    id: '96'
    taskid: 3862f463-3040-4c40-827c-091650fda1fc
    type: playbook
    task:
      id: 3862f463-3040-4c40-827c-091650fda1fc
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '88'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: inputs.QradarIPfield
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: '='
              list2:
                value:
                  simple: inputs.IPAddress
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: ''' OR "'
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: '='
              replaceWith:
                value:
                  simple: '" = '''
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where "'
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: ''' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 1590,
          "y": 1440
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '97':
    id: '97'
    taskid: f2d87ce7-8d5b-405d-8d90-d189d88a01a6
    type: playbook
    task:
      id: f2d87ce7-8d5b-405d-8d90-d189d88a01a6
      version: -1
      name: QRadarFullSearch
      description: ''
      playbookName: QRadarFullSearch
      type: playbook
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '89'
    scriptarguments:
      headers: {}
      interval:
        simple: '1'
      query_expression:
        complex:
          root: inputs.URLDomainField
          transformers:
          - operator: ProductJoin
            args:
              join:
                value:
                  simple: ILIKE
              list2:
                value:
                  simple: inputs.URLDomain
                iscontext: true
          - operator: join
            args:
              separator:
                value:
                  simple: '%'' OR "'
          - operator: replaceMatch
            args:
              regex:
                value:
                  simple: ILIKE
              replaceWith:
                value:
                  simple: '" ILIKE ''%'
          - operator: concat
            args:
              prefix:
                value:
                  simple: ' from events where "'
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.SelectFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: ','
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: inputs.InvestigationFields
                iscontext: true
              suffix: {}
          - operator: concat
            args:
              prefix:
                value:
                  simple: 'select '
              suffix: {}
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: '%'' '
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: inputs.TimeFrame
                iscontext: true
      range: {}
      timeout:
        simple: '600'
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ''
      wait: 1
    view: |-
      {
        "position": {
          "x": 2540,
          "y": 1450
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '98':
    id: '98'
    taskid: 9a5a3054-e5df-4f62-886f-8a12d5e54556
    type: regular
    task:
      id: 9a5a3054-e5df-4f62-886f-8a12d5e54556
      version: -1
      name: Set MD5 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '23'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.MD5
      value:
        complex:
          root: inputs.MD5
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2950,
          "y": 1490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '99':
    id: '99'
    taskid: b5161e12-e312-4544-848e-120bf2ed02e0
    type: regular
    task:
      id: b5161e12-e312-4544-848e-120bf2ed02e0
      version: -1
      name: Set SHA1 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '35'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA1
      value:
        complex:
          root: inputs.SHA1
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1290,
          "y": 1490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '100':
    id: '100'
    taskid: 4df207a9-fcb7-4f89-8f39-be0514945f8b
    type: regular
    task:
      id: 4df207a9-fcb7-4f89-8f39-be0514945f8b
      version: -1
      name: Set SHA256 to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '47'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: File.SHA256
      value:
        complex:
          root: inputs.SHA256
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -440,
          "y": 1490
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '101':
    id: '101'
    taskid: 3a320e32-b6cb-4558-8245-ee4f339ea892
    type: regular
    task:
      id: 3a320e32-b6cb-4558-8245-ee4f339ea892
      version: -1
      name: Set IP to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '53'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: IP
      value:
        complex:
          root: inputs.IPAddress
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1060,
          "y": 1305
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '102':
    id: '102'
    taskid: 80705900-f12b-4a0e-8e97-5866fc295226
    type: regular
    task:
      id: 80705900-f12b-4a0e-8e97-5866fc295226
      version: -1
      name: Set domain or url to array
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '17'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: DomainURL
      value:
        complex:
          root: inputs.URLDomain
          transformers:
          - operator: split
            args:
              delimiter:
                value:
                  simple: ','
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 3110,
          "y": 1305
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '103':
    id: '103'
    taskid: ce06e1a2-670d-46a6-801b-25765dd41b7b
    type: regular
    task:
      id: ce06e1a2-670d-46a6-801b-25765dd41b7b
      version: -1
      name: Set detected destination IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '84'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedDestinationIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.destinationip}
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: ${QRadar.Search.Result.events.destinationip}
                iscontext: true
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -2210,
          "y": 2210
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '104':
    id: '104'
    taskid: b72aca85-34d2-4fd3-8785-86c9997ae96f
    type: regular
    task:
      id: b72aca85-34d2-4fd3-8785-86c9997ae96f
      version: -1
      name: Set detected source IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '105'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedSourceIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.sourceip}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1270,
          "y": 2055
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '105':
    id: '105'
    taskid: dbfdd170-42cc-4c11-8524-bb7b1b88defc
    type: regular
    task:
      id: dbfdd170-42cc-4c11-8524-bb7b1b88defc
      version: -1
      name: Set detected destination IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '80'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedDestinationIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.destinationip}
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: ${QRadar.Search.Result.events.destinationip}
                iscontext: true
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -1090,
          "y": 2230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '106':
    id: '106'
    taskid: e03311d9-bf0b-4009-8a64-a666289696f7
    type: regular
    task:
      id: e03311d9-bf0b-4009-8a64-a666289696f7
      version: -1
      name: Set detected destination IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '76'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedDestinationIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.destinationip}
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: ${QRadar.Search.Result.events.destinationip}
                iscontext: true
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -200,
          "y": 2230
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '107':
    id: '107'
    taskid: 6aa43b0e-92be-496b-8963-ef25f29d0f5a
    type: regular
    task:
      id: 6aa43b0e-92be-496b-8963-ef25f29d0f5a
      version: -1
      name: Set detected source IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '106'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedSourceIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.sourceip}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -30,
          "y": 2055
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '108':
    id: '108'
    taskid: 7ebc475c-9795-41f8-897c-b0b633215015
    type: regular
    task:
      id: 7ebc475c-9795-41f8-897c-b0b633215015
      version: -1
      name: Set detected source IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '109'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedSourceIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.sourceip}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1420,
          "y": 1870
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '109':
    id: '109'
    taskid: e63ebaf9-4ac2-4056-80cf-b861f1f7f1d1
    type: regular
    task:
      id: e63ebaf9-4ac2-4056-80cf-b861f1f7f1d1
      version: -1
      name: Set detected destination IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '67'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedDestinationIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.destinationip}
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: ${QRadar.Search.Result.events.destinationip}
                iscontext: true
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1320,
          "y": 2045
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '110':
    id: '110'
    taskid: b3bd0f71-baa8-4390-8e3e-0fb431b7c77b
    type: regular
    task:
      id: b3bd0f71-baa8-4390-8e3e-0fb431b7c77b
      version: -1
      name: Set detected source IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '111'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedSourceIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.sourceip}
          transformers:
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2920,
          "y": 1890
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
  '111':
    id: '111'
    taskid: 8564d8a8-3dac-4b40-8491-7288b66e932a
    type: regular
    task:
      id: 8564d8a8-3dac-4b40-8491-7288b66e932a
      version: -1
      name: Set detected destination IP addresses
      description: Sets the IP addresses found in the DetectedIPs context key.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ''
    nexttasks:
      '#none#':
      - '72'
    scriptarguments:
      append:
        simple: 'true'
      key:
        simple: QRadar.DetectedDestinationIPs
      value:
        complex:
          root: ${QRadar
          accessor: Search.Result.events.destinationip}
          transformers:
          - operator: append
            args:
              item:
                value:
                  simple: ${QRadar.Search.Result.events.destinationip}
                iscontext: true
          - operator: uniq
    continueonerror: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 2810,
          "y": 2065
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 3095,
        "width": 6710,
        "x": -3220,
        "y": -240
      }
    }
  }
inputs:
- key: MD5
  value: {}
  required: false
  description: MD5 hash file or an array of hashes to search.
- key: QradarMD5Field
  value: {}
  required: false
  description: MD5 field to search in QRadar. If none are specified, the search will
    use a payload contains filter.
- key: SHA1
  value: {}
  required: false
  description: SHA1 hash file or an array of hashes to search.
- key: QradarSHA1Field
  value: {}
  required: false
  description: SHA1 field to search in QRadar. If none are specified, the search will
    use a payload contains filter.
- key: SHA256
  value: {}
  required: false
  description: SHA256 hash file or an array of hashes to search.
- key: QradarSHA256Field
  value: {}
  required: false
  description: SHA256 field to search in QRadar. If none are specified, the search
    will use a payload contains filter.
- key: IPAddress
  value: {}
  required: false
  description: |
    Source or destination IP to search. Can be a single address or an array of addresses.
- key: QradarIPfield
  value:
    simple: sourceip,destinationip
  required: false
  description: IP field to search in QRadar. If none are specified, the search will
    use sourceip or destinationip (combined).
- key: URLDomain
  value: {}
  required: false
  description: |
    Domain or Url can be single or an array of domain/urls to search. By default the LIKE clause is used.
- key: URLDomainField
  value: {}
  required: false
  description: 'URL/Domain field to search in QRadar. If none are specified, the search
    will use a payload contains filter. '
- key: SelectFields
  value:
    simple: '*'
  required: true
  description: The fields to be used in the select. Use comma delimited field names
    as they appear in AQL. * is an acceptable value.
- key: TimeFrame
  value:
    simple: LAST 7 DAYS
  required: false
  description: |-
    Time frame as used in AQL
    Examples can be
    LAST 7 DAYS
    START '2019-09-25 15:51' STOP '2019-09-25 17:51'
    For more examples review IBM's AQL documentation.
- key: InvestigationFields
  value:
    simple: sourceip,destinationip,username
  required: true
  description: The fields to be used for the hunting outputs. These fields are added
    to the selected field's input.
outputs:
- contextPath: QRadar.Search.Result
  description: Qradar's search results.
  type: string
- contextPath: QRadar.DetectedUsers
  description: Users detected based on the username field in your search.
  type: string
- contextPath: QRadar.DetectedHosts
  description: Hosts detected based on hosts in your assets table. Note that the data
    accuracy depends on how the Asset mapping is configured in QRadar.
  type: string
- contextPath: QRadar.DetectedSourceIPs
  description: IP addresses detected based on sourceip fields in your search.
  type: string
- contextPath: QRadar.DetectedDestinationIPs
  description: IP addresses detected based on destinationip fields in your search.
  type: string
tests:
- QRadar Indicator Hunting Test